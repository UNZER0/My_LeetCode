//二分法
class Solution {
    public int mySqrt(int x) {
        int ans=0;
        int l=1;
        int r=x;
        while(l<=r){
            int mid=l+(r-l)/2;
            if((long)mid*mid<=x){
                ans=mid;
                l=mid+1;
            }else{
                r=mid-1;
            }
        }
        return ans;
    }
}
//牛顿法
class Solution {
    public int mySqrt(int x) {
        //特判
        if(x==0){
            return 0;
        }
        int C=x;
        double xi=x;
        double ans=0;
        while(true){
            //计算新的点
            ans=0.5*(xi+C/xi);
            //两者差距足够小，说明已经很逼近真实值！
            if(Math.abs(ans-xi)<=1e-7){
                break;
            }
            xi=ans;
        }
        return (int)ans;
    }
}